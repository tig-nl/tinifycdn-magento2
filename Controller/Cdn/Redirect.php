<?php
/**
 *
 *          ..::..
 *     ..::::::::::::..
 *   ::'''''':''::'''''::
 *   ::..  ..:  :  ....::
 *   ::::  :::  :  :   ::
 *   ::::  :::  :  ''' ::
 *   ::::..:::..::.....::
 *     ''::::::::::::''
 *          ''::''
 *
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Creative Commons License.
 * It is available through the world-wide-web at this URL:
 * http://creativecommons.org/licenses/by-nc-nd/3.0/nl/deed.en_US
 * If you are unable to obtain it through the world-wide-web, please send an email
 * to servicedesk@tig.nl so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this module to newer
 * versions in the future. If you wish to customize this module for your
 * needs please contact servicedesk@tig.nl for more information.
 *
 * @copyright   Copyright (c) Total Internet Group B.V. https://tig.nl/copyright
 * @license     http://creativecommons.org/licenses/by-nc-nd/3.0/nl/deed.en_US
 */

namespace TIG\TinyCDN\Controller\Cdn;

use Magento\Backend\Model\UrlInterface;
use Magento\Framework\App\Action\Action;
use Magento\Framework\App\Action\Context;
use TIG\TinyCDN\Model\Config\Source\Url;

class Redirect extends Action
{
    /** @var Url $urlBuilder */
    private $urlBuilder;
    
    /**
     * Redirect constructor.
     *
     * @param Context $context
     * @param Url     $urlBuilder
     */
    public function __construct(
        Context $context,
        Url $urlBuilder
    ) {
        $this->urlBuilder = $urlBuilder;
        parent::__construct($context);
    }
    
    /**
     * This frontend controller is used to receive all parameters from Tinify and authenticate them.
     * If the state-parameter does not match the form-key generated by Magento earlier, the user is
     * redirected to the login-page (if no admin-session is active) or the dashboard (if an active
     * admin-session is available).
     *
     * @return \Magento\Framework\App\ResponseInterface|\Magento\Framework\Controller\ResultInterface|void
     * @throws \Exception
     */
    public function execute()
    {
        $params = $this->getRequest()->getParams();
        
        if (!$params['code'] && !$params['state']) {
            throw new \Exception($this->__('Invalid request. No direct access allowed.'));
        }
        
        $formKey  = $params['state'];
        $redirect = $this->resultRedirectFactory->create();
        
        // Strip the key from the Admin-URL and replace it with the saved key generated earlier.
        $authUrl = $this->urlBuilder->createAuthorizeUrl(true) . UrlInterface::SECRET_KEY_PARAM_NAME . '/' . $formKey;
        
        $redirect->setPath($authUrl);
        
        return $redirect;
    }
}
